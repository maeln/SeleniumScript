/*
 * generated by Xtext 2.10.0
 */
package emn.fil.a3.generator

import java.io.File
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import emn.fil.a3.seleniumScript.Script
import emn.fil.a3.seleniumScript.Function
import emn.fil.a3.seleniumScript.Selectors
import emn.fil.a3.seleniumScript.Selector

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class SeleniumScriptGenerator extends AbstractGenerator {
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
       fsa.generateFile('SeleniumTest.java',
           // resource.allContents.toIterable.filter(Calendar).head.generateCalendar
           resource.contents.filter(Script).head.genSeleniumcript
       )
   }
	
	def CharSequence genSeleniumcript(Script script) '''
		class Script {
			public static void main(String args[]) throws InterruptedException {
				System.setProperty("webdriver.gecko.driver", "TO FILL");
				WebDriver driver;
				
				
				«FOR f : script.functions»
					«switch f.name {
						case "open":
							genOpen(f)
						case "go":
							genGo(f)
						case "click":
							genClick(f)
						case "fill":
							genFill(f)
					}»
				«ENDFOR»
			}
		}
	'''
	
	def CharSequence genOpen(Function f) '''
		«IF f.params.get(0).equals("firefox")»
			driver = new FirefoxDriver()
		«ELSE»
			throw new RuntimeException("Unsuported browser.");
		«ENDIF»
	'''
	
	def CharSequence genGo(Function f) '''
		driver.get("«f.params.get(0)»");
	'''
	
	def CharSequence genClick(Function f) '''
		«IF f.params.get(0) instanceof Selectors»
		driver.findElement(
			«FOR s : ((Selectors) f.params.get(0))»
				
			«ENDFOR»
			).click();
		«ELSE»
			throw new RuntimeException("Unknown expression.");
		«ENDIF»
	'''
	
	def CharSequence genFill(Function f) '''
	'''
	
	def CharSequence genXPath(Selector s) '''
	
	'''
}
